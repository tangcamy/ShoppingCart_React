@import "/src/variables.scss";

//％定義組樣式，透過@extend沿用
%done-phase {
    .icon {
        display: inline-block;
    }
    .text {
        display: none;
    }
}
%undone-phase {
    .icon {
        display: none;
    }
    .text {
        display: inline-block;
    }
}
%current-text {
    color: var(--progress-current-color);
}
%current-icon {
    @extend %current-text;
    background-color: transparent;
    border: 1px solid var(--progress-current-color);
    @extend %undone-phase;
}
%undone-text {
    color: var(--progress-undone-color);
}
%undone-icon {
    @extend %undone-text;
    background-color: transparent;
    border: 1px solid var(--progress-undone-color);
    @extend %undone-phase;
}
%done-text {
    @extend %current-text;
}
%done-icon {
    color: var(--progress-done-color);
    background-color: transparent;
    @extend %done-phase;
}

section.register-container {
    h2.register-title {
        font-weight: 700;
        font-size: 32px;
        line-height: 38px;
        color: var(--main-text);
    }
}

$phase-map: (1: 'address', 2: 'shipping', 3: 'credit-card');
@for $index from 1 to 4 {
    section.register-container[data-phase="#{$index}"] {
        // progress-bar
        .progress-bar {
            &[data-order='2'] {
                @if $index < 2 {
                    border-color: var(--undone-progress-border);
                }
            }
        }

        @each $key, $phase in $phase-map {
            // progress-group
            .progress-group[data-phase="#{$phase}"] {
                @if $key > $index {
                    .progress-icon {
                        @extend %undone-icon;
                    }
                    .progress-label {
                        @extend %undone-text;
                    }
                } @else if $key == $index {
                    .progress-icon {
                        @extend %current-icon;
                    }
                    .progress-label {
                        @extend %current-text;
                    }
                } @else {
                    .progress-icon {
                        @extend %done-icon;
                    }
                    .progress-label {
                        @extend %done-text;
                    }
                }

                @if $phase == 'address' {
                    .progress-icon {
                        background-color: var(--pg-addr-bg-color);
                        border-color: var(--pg-addr-bg-color);
                        .text {
                            color: var(--pg-addr-color);
                        }
                    }
                }
            }

            // form
            form[data-phase="#{$phase}"] {
                @if $index == $key {
                    display: flex;   
                } @else {
                    display: none;
                }
            }

            // progress-control
            & ~ section.progress-control-container {
                .button-group[data-phase="#{$phase}"] {
                    @if $index == $key {
                        display: flex;   
                    } @else {
                        display: none;
                    }
                }
            }
        }
    }
}

@media screen and (max-width: $screen-break-point) {
    section.progress-container {
        margin-top: 24px;

        .progress-group {
            .progress-icon {
                width: 32px;
                height: 32px;
                margin-right: 0px;

                .text {
                    line-height: 32px;
                }
            }
        }
        .progress-label {
            display: none;
        }
    }
    section.form-container {
        margin-top: 24px;
    }
    section.progress-control-container {
        position: relative;
        margin-top: 24px;
        margin-bottom: 40px;
    }
    section.button-group {
        button.next {
            width: 156px;
        }

        &[data-phase='address'] {
            button.next {
                width: 100%;
            }
        }
    }
}